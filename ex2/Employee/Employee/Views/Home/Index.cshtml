@model EmployeeDB.Model.SelectLists
@{
    ViewBag.Title = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jsgrid@1.5.3/jsgrid.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jsgrid@1.5.3/jsgrid-theme.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jsgrid@1.5.3/jsgrid.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

</head>
<body>
    @using (Html.BeginForm())
    {
        <div class="jumbotron">
            <h1>My first MVC website</h1>
        </div>

        <div class="row">

            <div class="panel panel-default">
                <div class="panel-heading"></div>
                <div class="panel-body">
                    <div class="form-horizontal" id="freeze">
                        <div class="form-group">
                            <div class="col-sm-2">
                                <h2>Getting Employees</h2>
                                @Html.DropDownList("employee", Model.EmployeeList, "Select an employee", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal" id="freeze">
                        <div class="form-group">
                            <div class="col-sm-10">
                                <input id="term" class="form-control autoComplete" type="text" />
                            </div>
                            <div class="col-sm-2">
                                <button id="btnSearch" type="button" class="btn btn-primary pull-right">Search <span class="glyphicon glyphicon-search"></span></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="modal fade" id="AddtModal" tabindex="-1" role="dialog" aria-labelledby="AddModalLabel">
                <!-- Modal content here -->
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div id="gridEmpl"></div>
            </div>
        </div>
    }

    @section scripts
    {
        <script type="text/javascript">
            $(function () {
                $('.autoComplete').autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("Search")',
                            type: 'POST',
                            dataType: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                debugger;
                                response(data)
                            }
                        });
                    }
                });

        var FormParams = {
            term: $('#Term').val(),
            GridFiler: function () {
                return {
                    term: $('#Term').val()

                }
            }
        }

        var GridManager = {
            Refresh: function () {
               $("#gridEmpl").jsGrid("Search", FormParams.GridFiler());
            },
            update: function () {
                //TODO
            }
        }
            $("#gridEmpl").jsGrid({
            //self: this,
            width: "100%",
            height: "auto",
            autoload: true,
            pageLoading: true,
            editing: true,
            filtering: false,
            sorting: true,
        })

        var NewEmployee = {
            fName: '#fName',
            lName: '#lName',
            email: '#email',
            occupation: '#occupation',
            department:"",
            Id: '#AddModal',
            Show: function () {
                $(this.Id).modal('show');
            },
            Hide: function () {
                $(this.Id).modal('hide');
            },
            ClearForm: function () {
                $(this.fName).val('');
                $(this.lName).val('');
                $(this.email).val('');
                $(this.occupation).val('');
                $(this.department).val('');
            },
            IsValid: function () {
                var undentifiedList = null;
                var UlItems = null;
                var IsValid = true;
                var Valid = new Validation('message');

                if ($(this.fName).val() == '') {
                    IsValid = false;
                }

                if ($(this.lName).val() == '') {
                    IsValid = false;
                    UlItems += '<li>Last name is required</li>';
                }
                if ($(this.email).val()  == '') {
                    IsValid = false;
                    UlItems += '<li>email is required</li>';
                }
                undentifiedList = '<ul>' + UlItems + '</ul>'

                if (!IsValid) {
                    Validation.ShowErrorMessage(undentifiedList);
                    return false;
                }

                return true;
            }

        }
        $(document).on('click', '.plus-icon', function () {
            $('#AddtModal').modal('show')
            $('#AddtModal').data('emplid', $(this).data('emplid'));

        })
        //insert-confirm
        $('.confirm-insert').click(function () {

            var Validate = new Validation('emplid');
            if (NewEmployee.IsValid()) {
                Grid.Add({
                    fName: $(NewEmployee.fName).val(),
                    lName: $(NewEmployee.lName).val(),
                    email: $(NewEmployee.email).val(),
                    occupation: $(NewEmployee.occupation).val(),
                    department: $(NewEmployee.department).val()
                },
                    function (data) {
                        if (data.IsValid) {
                            Validate.ShowSuccessMessage('Employee was added successfully')
                            Grid.RefreshGrid();
                        }
                        else {
                            Validate.ShowErrorMessage(data.Message);
                        }
                    },
                    function (data) {
                        Validate.ShowErrorMessage('Unexpected error occured')
                    });
            }


        })
        //delete popup
        $(document).on('click', '.delete-icon', function () {
            var temp = $('#deleteModal').data('typeid', $(this).data('typeid'));
            $('#deleteModal').modal('show')
            $('#deleteModal').data('emplid', $(this).data('emplid'));
        });
        //delete confirm
        $('.confirm-delete').click(function () {
            var Validate = new Validaiton('formalert');

            var s = $('#deleteModal').data('emplid');
            Grid.Delete({ ID: s },
                function (data) {
                    if (data.IsValid) {
                        $('#deleteModal').modal('hide');
                        Validation.ShowSuccessMessage('Category was deleted successfully')
                        Grid.RefreshGrid();
                    }
                    else {
                        AlertObj.ShowErrorMessage(data.Message);
                    }

                },
                function (data) {
                    $('#deleteModal').modal('hide');
                    Validation.ShowErrorMessage('Unexpected error occured');

                });
        })


        $('#AddEmplBtn').click(function () {
            //$('#NewTechnicianModal').modal('show');
            NewTechType.ClearForm();
            NewTechType.Show()
        })

         $("#gridEmpl").jsGrid({
                    width: "100%",
                    height: "auto",
                    autoload: true,
                    pageLoading: true,
                    editing: true,
                    filtering: false,
                    sorting: true,
                    paging: true,
                    pageSize: 30,
                    pageButtonCount: 3,
                    pageNextText: ">",
                    pageLastText: ">>",
                    pagePrevText: "<",
                    pageFirstText: "<<",
                    fields: [
                        { title: "First Name", name: "FirstName", type: "text", width: 50 },
                        { title: "Last Name", name: "LastName", type: "text", width: 50 },
                        { title: "Department", name: "Occupation", type: "text", width: 50 },
                        { title: "Email", name: "Email", type: "text", width: 50 }
                    ],
                    controller: {
                        loadData: function (filter) {
                            var d = $.Deferred();
                            $.ajax({
                                url: '@Url.Action("GetEmployee", "Home")', // Make sure this URL is correct
                                type: 'GET',
                                dataType: "json",
                                data: {
                                    pageIndex: filter.pageIndex,
                                    pageSize: filter.pageSize,
                                    sortField: filter.sortField,
                                    sortOrder: filter.sortOrder
                                },
                                success: function (response) {
                                    d.resolve(response);
                                }
                            });
                            return d.promise();
                        }
                    }
                });
            });
        </script>
    }
</body>
</html>